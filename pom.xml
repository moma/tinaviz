<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>eu.tinasoft</groupId>
    <packaging>jar</packaging>
    <artifactId>tinaviz</artifactId>
    <version>2.0-SNAPSHOT</version>

    <dependencies>
        <dependency>
            <groupId>netscape</groupId>
            <artifactId>javascript</artifactId>
            <version>1.6.0_22</version>
            <!--<scope>provided</scope>-->
        </dependency>
        <dependency>
            <groupId>org.processing</groupId>
            <artifactId>core</artifactId>
            <version>1.2.1</version>
        </dependency>
        <dependency>
            <groupId>org.processing</groupId>
            <artifactId>itext</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>org.processing</groupId>
            <artifactId>pdf</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>traer</groupId>
            <artifactId>physics</artifactId>
            <version>3.0</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${lib.org.scala-lang.scala.version}</version>
        </dependency>
    </dependencies>

    <properties>
        <lib.org.scala-lang.scala.version>2.8.1</lib.org.scala-lang.scala.version>
        <project.build.mainClass>eu.tinasoft.tinaviz.Main</project.build.mainClass>
        <maven.scala.version>${lib.org.scala-lang.scala.version}</maven.scala.version>
        <keystore.path>~/Private/dev.keystore</keystore.path>
        <keystore.type>JKS</keystore.type>
        <keystore.alias>devalias</keystore.alias>
        <!--<keystore.password>keypass</keystore.password>-->
        <keystore.store.password>storepass</keystore.store.password>
        <keystore.key.password>keypass</keystore.key.password>
    </properties>


    <build>
        <plugins>
            <plugin>
                <groupId>org.scala-tools</groupId>
                <artifactId>maven-scala-plugin</artifactId>
                <version>2.9.1</version>
                <executions>
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <jvmArgs>
                        <jvmArg>-Xms256m</jvmArg>
                        <jvmArg>-Xmx1024m</jvmArg>
                    </jvmArgs>
                </configuration>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <artifactSet>
                                <!-- signed jars-->
                                <excludes>
                                    <!-- liveconnect:plugin was included for Netbeans, but browsers already have it -->
                                    <exclude>liveconnect:plugin</exclude>
                                </excludes>
                            </artifactSet>

                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <!-- Main class -->
                                    <mainClass>eu.tinasoft.tinaviz.Main</mainClass>
                                </transformer>
                                <!-- Use resource transformers to prevent file overwrites -->
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>properties.properties</resource>
                                </transformer>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.XmlAppendingTransformer">
                                    <resource>applicationContext.xml</resource>
                                </transformer>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/cxf/cxf.extension</resource>
                                </transformer>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.XmlAppendingTransformer">
                                    <resource>META-INF/cxf/bus-extensions.xml</resource>
                                </transformer>
                            </transformers>

                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>com.pyx4me</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>proguard</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includeDependency>false</includeDependency>
                    <injar>${project.build.finalName}.jar</injar>
                    <outjar>${project.build.finalName}-small.jar</outjar>
                    <options>

                        <option>-dontobfuscate</option>
                        <option>-dontoptimize</option>
                        <option>-dontpreverify</option>
                        <option>-dontnote</option>
                        <option>-dontwarn</option>
                        <option>-ignorewarnings</option>
                        <option>-keepattributes</option>

                        <option>-keepclasseswithmembers public class * {
                            public static void main(java.lang.String[]);
                            }
                        </option>

                        <option>-keep class * implements org.xml.sax.EntityResolver</option>

                        <option>-keepclassmembers class * {
                            ** MODULE$;
                            }
                        </option>

                        <option>-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinPool {
                            long eventCount;
                            int workerCounts;
                            int runControl;
                            scala.concurrent.forkjoin.ForkJoinPool$WaitQueueNode syncStack;
                            scala.concurrent.forkjoin.ForkJoinPool$WaitQueueNode spareStack;
                            }
                        </option>

                        <option>-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinWorkerThread {
                            int base;
                            int sp;
                            int runState;
                            }
                        </option>

                        <option>-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinTask {
                            int status;
                            }
                        </option>

                        <option>-keepclassmembernames class scala.concurrent.forkjoin.LinkedTransferQueue {
                            scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference head;
                            scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference tail;
                            scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference cleanMe;
                            }
                        </option>

                        <option>-keep class processing.core.PGraphicsJava2D</option>
                        <option>-keep class java.awt.event.MouseWheelEvent</option>
                        <option>-keep class java.awt.event.MouseWheelListener</option>
                        <option>-keep class java.awt.event.MouseListener</option>
                        <option>-keep class org.processing.core.PApplet</option>
                        <option>-keep class processing.pdf.PGraphicsPDF</option>
                        <option>-keep class eu.tinasoft.tinaviz.scene.TApplet</option>

                        <!-- taken from the example -->
                        <option>-allowaccessmodification</option>
                        <option>-keep public class * extends java.applet.Applet { *; }</option>
                    </options>
                    <libs>
                        <lib>${java.home}/lib/rt.jar</lib>
                    </libs>
                </configuration>
            </plugin>


            <plugin>
                <artifactId>maven-jarsigner-plugin</artifactId>
                <version>1.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>

                    <archive>target/${project.build.finalName}-small.jar</archive>

                    <keystore>${keystore.path}</keystore>
                    <storetype>${keystore.type}</storetype>
                    <alias>${keystore.alias}</alias>
                    <storepass>${keystore.store.password}</storepass>
                    <keypass>${keystore.key.password}</keypass>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <name>${project.artifactId} ${project.version}</name>

    <pluginRepositories>
        <!--
        <pluginRepository>
            <id>lafros.com</id>
            <url>http://lafros.com/m2arts</url>
        </pluginRepository>
        -->
    </pluginRepositories>

    <repositories>
        <repository>
            <id>maven.iscpif.fr</id>
            <name>ISCPIF repository</name>
            <url>http://maven.iscpif.fr/public/</url>
        </repository>
        <repository>
            <id>maven.iscpif.fr.snapshots</id>
            <name>ISCPIF snapshots repository</name>
            <url>http://maven.iscpif.fr/snapshots/</url>
        </repository>
        <repository>
            <id>org.wokalab.cytoscape.releases</id>
            <name>CytoScape Releases</name>
            <url>http://cytoscape.wodaklab.org/nexus/content/repositories/releases/</url>
        </repository>
        <repository>
            <id>org.wokalab.cytoscape.snapshots</id>
            <name>CytoScape Snapshots</name>
            <url>http://cytoscape.wodaklab.org/nexus/content/repositories/snapshots/</url>
        </repository>
        <repository>
            <id>scala-tools.org</id>
            <name>Scala repository</name>
            <url>http://scala-tools.org/repo-releases/</url>
        </repository>
        <repository>
            <id>developer.k-int.com</id>
            <name>k-int repository</name>
            <url>http://developer.k-int.com/maven2/</url>
        </repository>
    </repositories>
</project>
